package backend.academy.transformation;

import backend.academy.domain.Point;

/**
 * Класс для применения сферической трансформации к точке.
 * Эта трансформация изменяет каждую координату точки, делая инверсию относительно её радиуса в квадрате.
 */
public class SphericalTransformation implements Transformation{

    /**
     * Применяет сферическую трансформацию к координатам точки.
     * В этой трансформации координаты точки масштабируются обратно пропорционально квадрату их расстояния от начала координат,
     * что приводит к созданию эффекта проекции на сферу.
     *
     * @param p Исходная точка, координаты которой будут трансформированы.
     * @return Новая точка, координаты которой являются результатом применения сферической трансформации.
     *         Каждая координата исходной точки делится на квадрат её расстояния от начала координат.
     */
    @Override
    public Point transform(Point p) {
        double r2 = p.x() * p.x() + p.y() * p.y();
        return new Point(p.x() / r2, p.y() / r2);
    }
}
